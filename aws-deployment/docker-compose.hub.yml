version: '3.8'

services:
  server-app:
    image: ${DOCKER_HUB_USERNAME:-your-dockerhub-username}/managementapp-server:${IMAGE_TAG:-latest}
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://*:8080
    volumes:
      - ../data:/app/data
    networks:
      - app-network
    restart: unless-stopped
    # Memory limits for t2.micro
    mem_limit: 300m
    memswap_limit: 500m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health", "||", "exit", "1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s

  client-app:
    image: ${DOCKER_HUB_USERNAME:-your-dockerhub-username}/managementapp-client:${IMAGE_TAG:-latest}
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost/api}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME:-Management App}
      - NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION:-1.0.0}
      - NODE_ENV=production
    depends_on:
      server-app:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    # Memory limits for t2.micro
    mem_limit: 400m
    memswap_limit: 600m

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - client-app
      - server-app
    networks:
      - app-network
    restart: unless-stopped
    # Light memory limit for nginx
    mem_limit: 50m
    memswap_limit: 100m
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health", "||", "exit", "1"]
      interval: 60s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  data:
    driver: local
