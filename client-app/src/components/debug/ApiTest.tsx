'use client'\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\n\nexport function ApiTest() {\n  const [result, setResult] = useState('')\n  \n  const testBackendConnection = async () => {\n    const apiUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000/api'\n    \n    try {\n      console.log('Testing backend connection to:', apiUrl)\n      setResult('Testing...')\n      \n      // Test 1: Simple fetch to check connectivity\n      console.log('Test 1: Basic connectivity')\n      const response = await fetch(`${apiUrl}/health`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      \n      console.log('Health check response:', response.status, response.statusText)\n      \n      if (response.ok) {\n        const data = await response.text()\n        console.log('Health check data:', data)\n        setResult(`✅ Backend connected! Health check: ${response.status}`)\n      } else {\n        setResult(`❌ Backend responded with: ${response.status} ${response.statusText}`)\n      }\n      \n    } catch (error: any) {\n      console.error('Backend connection failed:', error)\n      setResult(`❌ Connection failed: ${error.message}`)\n    }\n  }\n  \n  const testLoginEndpoint = async () => {\n    const apiUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000/api'\n    \n    try {\n      console.log('Testing login endpoint')\n      setResult('Testing login...')\n      \n      const response = await fetch(`${apiUrl}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: 'admin@managementapp.com',\n          password: 'admin123'\n        })\n      })\n      \n      console.log('Login response:', response.status, response.statusText)\n      \n      if (response.ok) {\n        const data = await response.json()\n        console.log('Login success:', data)\n        setResult(`✅ Login endpoint works! Status: ${response.status}`)\n      } else {\n        const errorData = await response.text()\n        console.log('Login error data:', errorData)\n        setResult(`❌ Login failed: ${response.status} - ${errorData}`)\n      }\n      \n    } catch (error: any) {\n      console.error('Login test failed:', error)\n      setResult(`❌ Login test failed: ${error.message}`)\n    }\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg border z-50 max-w-xs\">\n      <h3 className=\"font-bold mb-2\">API Connection Test</h3>\n      <div className=\"space-y-2\">\n        <Button \n          onClick={testBackendConnection}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"w-full\"\n        >\n          Test Backend\n        </Button>\n        <Button \n          onClick={testLoginEndpoint}\n          size=\"sm\"\n          className=\"w-full\"\n        >\n          Test Login API\n        </Button>\n      </div>\n      {result && (\n        <div className=\"mt-2 text-xs break-words\">\n          {result}\n        </div>\n      )}\n    </div>\n  )\n}\n